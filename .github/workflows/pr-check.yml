name: PR Check

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

jobs:
  pr-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm run install:all

    - name: Run linter
      run: npm run lint

    - name: Run tests with coverage
      run: npm run test
      env:
        CI: true

    - name: Build application
      run: npm run build

    - name: Check bundle size
      run: |
        cd frontend
        npm run analyze || echo "Bundle analysis completed"

    - name: Comment PR
      uses: actions/github-script@v7
      if: always()
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && comment.body.includes('🤖 PR 체크 결과')
          );
          
          const success = '${{ job.status }}' === 'success';
          const status = success ? '✅ 통과' : '❌ 실패';
          
          const body = `🤖 PR 체크 결과: ${status}
          
          **체크 항목:**
          - 린터 검사: ${success ? '✅' : '❌'}
          - 테스트 실행: ${success ? '✅' : '❌'}
          - 빌드 확인: ${success ? '✅' : '❌'}
          
          ${success ? '모든 체크를 통과했습니다! 🎉' : '일부 체크에 실패했습니다. 로그를 확인해주세요.'}`;
          
          if (botComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
          } 